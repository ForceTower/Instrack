// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.3.72"

    ext {
        // Android X
        ktx = "1.3.0"
        app_compat = '1.1.0'
        google_material = '1.1.0'
        constraint_layout = "1.1.3"
        annotation = "1.1.0"
        exif_interface = "1.1.0"
        pallete = "1.0.0"
        fragment = '1.2.4'
        swipe_refresh = "1.0.0"
        arch = "2.1.0"

        // Architecture
        room = '2.2.5'
        lifecycle = '2.2.0'
        paging = '2.1.2'
        navigation = '2.2.2'

        // Dependency Injection
        dagger = '2.27'

        // Logs
        timber = "4.7.1"

        // Image
        glide = '4.11.0'
        lottie = '3.3.1'

        // Networking
        okhttp = '4.7.1'
        retrofit = '2.8.2'

        // Others
        gson = '2.8.6'

        // Build Versions
        android_gradle_plugin = "4.0.0"
        kotlinter = "1.26.0"
    }
    repositories {
        google()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "http://oss.sonatype.org/content/repositories/snapshots" }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$android_gradle_plugin"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jmailen.gradle:kotlinter-gradle:$kotlinter"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$navigation"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "http://oss.sonatype.org/content/repositories/snapshots" }
        maven { url "https://jitpack.io" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

subprojects {
    tasks.whenTaskAdded {
        if (name == 'preBuild') {
            mustRunAfter 'lintKotlin'
        }
    }
}
